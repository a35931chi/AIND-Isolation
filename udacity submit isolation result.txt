udacity submit isolation result
Uploading submission...
[=========================== 100% ===========================] 12010/12010

Waiting for results...Done!

Results:
--------

************************************************************************
                         Test Failure Feedback
************************************************************************

Failed Test: 2. Test functionality of MinimaxPlayer.minimax()
----------------------------------------------------------------------
AssertionError: False is not true : Your MinimaxAgent.minimax function did not visit every node in the game tree as player 1.  First check for off-by-one errors in your handling of the depth limiting. Then, especially if the number of nodes explored by your agent is too low, check everywhere you call to game.get_legal_moves() to make sure you are getting the legal moves for the appropriate player at each level of the game tree.  Finally, you may be using non-standard search optimizations that are not supported by the test cases.  The range of expansions accepted will vary slightly within the range indicated based on your termination condition.

Expected number of visited nodes -- min: 4 max: 4
Number of nodes your agent explored: 20

Test Case Details:
------------------
Heuristic: center_distance
Depth limit: 1
Initial Board State:
     0   1   2   3   4   5   6   7   8
0  |   |   |   |   |   |   |   |   |   |
1  |   |   |   |   |   |   |   |   |   |
2  |   |   | - |   | - |   | - |   |   |
3  |   |   |   |   | - |   |   |   |   |
4  |   |   | 2 | - | - | - | - | 1 |   |
5  |   |   | - | - | - | - |   |   |   |
6  |   | - |   | - | - |   |   |   |   |
7  |   |   |   |   | - |   |   |   |   |
8  |   |   |   |   |   |   |   |   |   |

game._board_state:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22, 67]



Failed Test: 6. Test the interface of AlphaBetaPlayer.get_move()
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/grader/isolation/workspace/game_agent.py", line 268, in get_move
    raise NotImplementedError
NotImplementedError


Failed Test: 7. Test functionality of AlphaBetaPlayer.alphabeta()
----------------------------------------------------------------------
AssertionError: Cut off search too early. (i.e., a correct implementation of alpha beta search did not prune at the same node as your agent when following the same node expansion order.)
Alpha: -inf
Beta: inf
Game tree evaluation order:


Nodes are shown with each layer sorted in the order the nodes were expanded
during search.  All nodes in each successive layer are children of the
furthest-right node in the parent layer above it.

Test Case Details:
------------------
Heuristic: center_distance
Depth limit: 1
Initial Board State:
     0   1   2   3   4   5   6   7   8
0  |   |   |   |   |   |   |   |   |   |
1  |   |   |   |   |   |   |   |   |   |
2  |   |   | - |   | - |   | - |   |   |
3  |   |   | - |   | - | - |   |   | - |
4  |   | - |   |   | - | - | 2 | - |   |
5  |   |   |   |   | - | - | - |   |   |
6  |   |   | - |   | 1 |   | - |   |   |
7  |   |   |   |   |   |   |   |   |   |
8  |   |   |   |   |   |   |   |   |   |

game._board_state:
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 58, 42]



Failed Test: 9. Test iterative deepening in AlphaBetaPlayer.get_move()
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/grader/isolation/workspace/game_agent.py", line 268, in get_move
    raise NotImplementedError
NotImplementedError


Failed Test: 10. Test that AlphaBetaPlayer successfully plays a full game
----------------------------------------------------------------------
Traceback (most recent call last):
NotImplementedError

During handling of the above exception, another exception occurred:

AssertionError: Your agent raised an error while attempting to play a complete game against another agent.  Make sure that your agent can play an entire game -- including selecting initial moves on an empty board.
Exception:


Failed Test: 11. Test output interface of custom_score()
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/grader/isolation/workspace/game_agent.py", line 33, in custom_score
    raise NotImplementedError
NotImplementedError


Failed Test: 12. Test output interface of custom_score_2()
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/grader/isolation/workspace/game_agent.py", line 62, in custom_score_2
    raise NotImplementedError
NotImplementedError


Failed Test: 13. Test output interface of custom_score_3()
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/grader/isolation/workspace/game_agent.py", line 84, in custom_score_3
    raise NotImplementedError
NotImplementedError


Failed Test: 14. Submission includes heuristic_analysis.pdf
----------------------------------------------------------------------
AssertionError: False is not true : You must submit a report named heuristic_analysis.pdf for review.


Failed Test: 15. Submission includes research_review.pdf
----------------------------------------------------------------------
AssertionError: False is not true : You must submit a report named research_review.pdf for review.


************************************************************************
                          Test Result Summary
************************************************************************

1. Test output interface of MinimaxPlayer.minimax():                   .
2. Test functionality of MinimaxPlayer.minimax():                      F
3. Test that minimax() raises SearchTimeout when the timer expires:    .
4. Test that MinimaxPlayer successfully plays a full game:             .
5. Test interface of AlphaBetaPlayer.alphabeta():                      .
6. Test the interface of AlphaBetaPlayer.get_move():                   E
7. Test functionality of AlphaBetaPlayer.alphabeta():                  F
8. Test that alphabeta() raises SearchTimeout when the timer expires:  .
9. Test iterative deepening in AlphaBetaPlayer.get_move():             E
10. Test that AlphaBetaPlayer successfully plays a full game:          F
11. Test output interface of custom_score():                           E
12. Test output interface of custom_score_2():                         E
13. Test output interface of custom_score_3():                         E
14. Submission includes heuristic_analysis.pdf:                        F
15. Submission includes research_review.pdf:                           F

------------------------------------------------------------------------
            . - Test Passed    F - Test Failed    E - Error

--------------------------------------------------------------------------------

Not all of the tests passed.  If you are really stuck, consider asking your classroom mentor for help.


Details are available in isolation-result-162965.json.

If you would like this version of the project to be reviewed,
submit isolation-162965.zip to the reviews website.